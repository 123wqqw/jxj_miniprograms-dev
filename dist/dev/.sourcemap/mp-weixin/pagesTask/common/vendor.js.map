{"version":3,"file":"pagesTask/common/vendor.js","mappings":"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","sources":["uni-app:///common/huaweicloud/index.js","uni-app:///pagesTask/components/x-week-date-calendar/generateDates.js"],"sourcesContent":["/**\r\n * 小程序直连OBS文档 华为云\r\n * https://support.huaweicloud.com/bestpractice-obs/obs_05_2000.html\r\n */\r\n\r\n// // 引入配置文件\r\n// const config = require('./Configuration.js');\r\n// // 引入policy编码计算方法\r\n// const getPolicyEncode = require('./GetPolicy.js');\r\n// // 引入签名计算方法\r\n// const getSignature = require('./GetSignature.js');\r\n\r\nimport { getReq } from '@/common/request.js';\r\nimport store from '@/store/index.js';\r\nimport { showToast, dateFormat } from '@/common/util.js';\r\n\r\n// const OBSupload = function(filePath, type) {\r\n// \treturn new Promise((reponse, reject) => {\r\n// \t\tif (!filePath) {\r\n// \t\t\treject(false)\r\n// \t\t\tshowToast(\"Invalid filePath\")\r\n// \t\t\treturn\r\n// \t\t}\r\n\r\n// \t\tconst paths = type === 'video' ? 'xiaotiyun/minprogram/sports-clock-video' :\r\n// \t\t\t\"xiaotiyun-images/minprogram/avatar-img\";\r\n// \t\tconst now = new Date()\r\n// \t\tconst dateStr = dateFormat(now, 'yyyy-MM-dd');\r\n// \t\tconst fileExt = filePath.substring(filePath.lastIndexOf(\".\"));\r\n// \t\tconst key =\r\n// \t\t\t`${paths}/${dateStr}/${store.state.xiaotiyunUser.teacher.teacherId}-${now.getTime()}${fileExt}`;\r\n// \t\tconst OBSPolicy = { // 设定policy内容，policy规则定义可参考步骤3中的超链接签名计算规则文档\r\n// \t\t\t\"expiration\": new Date(now.setMinutes(now.getMinutes() + 60)), // 过期时间（有效时间为60分钟）\r\n// \t\t\t\"conditions\": [{\r\n// \t\t\t\t\t\"bucket\": type === 'video' ? 'gxapp-vedio' : 'gxapp-images'\r\n// \t\t\t\t}, // 桶名要和配置文件中endpoint中的桶名保持一致\r\n// \t\t\t\t{\r\n// \t\t\t\t\t'key': key\r\n// \t\t\t\t}\r\n// \t\t\t]\r\n// \t\t}\r\n\r\n// \t\t// 计算base64编码后的policy\r\n// \t\tconst policyEncoded = getPolicyEncode(OBSPolicy);\r\n// \t\t// 计算signature\r\n// \t\tconst signature = getSignature(policyEncoded, config.SecretKey);\r\n\r\n// \t\tconst bucket = type === 'video' ? config.videoHost : config.host\r\n// \t\tuni.uploadFile({\r\n// \t\t\turl: bucket, //上传视频接口\r\n// \t\t\tfilePath: filePath,\r\n// \t\t\tname: 'file',\r\n// \t\t\theader: {\r\n// \t\t\t\t'content-type': 'multipart/form-data; boundary=-9431149156168',\r\n// \t\t\t},\r\n// \t\t\tformData: {\r\n// \t\t\t\t'AccessKeyID': config.AccessKeyId,\r\n// \t\t\t\t'policy': policyEncoded,\r\n// \t\t\t\t'signature': signature,\r\n// \t\t\t\t'key': key\r\n// \t\t\t},\r\n// \t\t\tsuccess: function(res) {\r\n// \t\t\t\tif (res.statusCode == '204') {\r\n// \t\t\t\t\tconst url = type === 'video' ? config.videoHost.replace(\r\n// \t\t\t\t\t\t'gxapp-vedio.obs.cn-east-3.myhuaweicloud.com',\r\n// \t\t\t\t\t\t'gxapp-vedio.iydsj.com') : config.host.replace(\r\n// \t\t\t\t\t\t'gxapp-images.obs.cn-east-3.myhuaweicloud.com',\r\n// \t\t\t\t\t\t'gxapp-images.iydsj.com')\r\n// \t\t\t\t\treponse(`${url}/${key}`)\r\n// \t\t\t\t} else {\r\n// \t\t\t\t\tshowToast(\"Uploaded failed\")\r\n// \t\t\t\t\treject(false)\r\n// \t\t\t\t}\r\n// \t\t\t},\r\n// \t\t\tfail: function(e) {\r\n// \t\t\t\treject(e)\r\n// \t\t\t}\r\n// \t\t})\r\n// \t})\r\n// }\r\n\r\n/**\r\n * OBS使用临时授权URL上传文件\r\n * @param {Object} filePath 文件路径\r\n * @param {Object} params 传参\r\n */\r\nfunction OBSTempAuthUpload(filePath, params) {\r\n\treturn new Promise((response, reject) => {\r\n\t\tif (!filePath || !params) {\r\n\t\t\treject(false);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst uploadFile = (res, data) => {\r\n\t\t\tuni.request({\r\n\t\t\t\turl: res.signedUrl,\r\n\t\t\t\tmethod: params.method,\r\n\t\t\t\twithCredentials: false,\r\n\t\t\t\theader: { 'Content-Type': params.contentType },\r\n\t\t\t\tresponseType: 'text',\r\n\t\t\t\tdata: data,\r\n\t\t\t\tsuccess(resp) {\r\n\t\t\t\t\tif (resp.statusCode == 200) {\r\n\t\t\t\t\t\tconsole.log('Creating object using temporary signature succeed.');\r\n\t\t\t\t\t\tresponse(params.result);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('Creating object using temporary signature failed!');\r\n\t\t\t\t\t\tconsole.log('status:' + resp.status);\r\n\t\t\t\t\t\tconsole.log(resp.data);\r\n\t\t\t\t\t\treject(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfail(error) {\r\n\t\t\t\t\tconsole.log(' obs temp sign upload error: ', error);\r\n\t\t\t\t\treject(false)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tconst readFile = (res) => {\r\n\t\t\tlet fileManager = uni.getFileSystemManager();\r\n\t\t\tfileManager.readFile({\r\n\t\t\t\tfilePath: filePath,\r\n\t\t\t\tsuccess: (resp) => {\r\n\t\t\t\t\tuploadFile(res, resp.data);\r\n\t\t\t\t},\r\n\t\t\t\tfail: (error) => {\r\n\t\t\t\t\treject(false)\r\n\t\t\t\t\tconsole.log(' obs temp sign read error: ', error);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tconst tmpParams = {\r\n\t\t\tbucketName: params.bucketName,\r\n\t\t\tobjectKey: params.objectKey,\r\n\t\t\tmethod: params.method,\r\n\t\t\tcontentType: params.contentType\r\n\t\t}\r\n\t\tgetReq('/xty-other/app-api/obs/v290/getTemporaryUrl', tmpParams).then((res) => {\r\n\t\t\tif (res.data) {\r\n\t\t\t\treadFile(JSON.parse(res.data));\r\n\t\t\t} else {\r\n\t\t\t\treject(false)\r\n\t\t\t\tconsole.log(' obs temp sign empty err: ', res.message);\r\n\t\t\t}\r\n\t\t}).catch((err) => {\r\n\t\t\treject(false)\r\n\t\t\tconsole.log(' obs temp sign err: ', err);\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * 图片或视频文件上传\r\n * @param {Object} filePath 文件路径\r\n * @param {Object} type 文件类型：图片/视频\r\n */\r\nfunction OBSupload(filePath, type) {\r\n\tif (!filePath) {\r\n\t\treturn new Promise((response, reject) => reject(false))\r\n\t}\r\n\tlet host = 'https://gxapp-images.iydsj.com';\r\n\tlet paths = \"xiaotiyun-images/minprogram/avatar-img\";\r\n\tif (type === 'video') {\r\n\t\thost = 'https://gxapp-vedio.iydsj.com';\r\n\t\tpaths = 'xiaotiyun/minprogram/sports-clock-video';\r\n\t}\r\n\tconst now = new Date();\r\n\tconst dateStr = dateFormat(now, 'yyyy-MM-dd');\r\n\tconst fileExt = filePath.substring(filePath.lastIndexOf(\".\"));\r\n\tconst teacherId = store.state.xiaotiyunUser.teacher.teacherId;\r\n\tconst objectKey = `${paths}/${dateStr}/${teacherId}-${now.getTime()}${fileExt}`;\r\n\tconst bucket = type === 'video' ? 'gxapp-vedio' : 'gxapp-images';\r\n\tconst resultUrl = host + '/' + objectKey;\r\n\r\n\tconst params = {\r\n\t\tmethod: 'PUT',\r\n\t\tcontentType: 'text/plain',\r\n\t\tbucketName: bucket,\r\n\t\tpaths: paths,\r\n\t\tobjectKey: objectKey,\r\n\t\tresult: resultUrl,\r\n\t}\r\n\treturn OBSTempAuthUpload(filePath, params)\r\n}\r\n\r\nmodule.exports = OBSupload;","/*\n*此函数的作用是根据传入的一个日期，返回这一周的日期或者这一个月的日期，\n* 如果是月的话注意还包含上个月和下个月的日期，月的话总共数据有 6 * 7 = 42个\n*\n*/\n/* \n* 时间格式化函数\n* 重要提示，微信小程序new Date('2020-04-16')在ios中无法获取时间对象\n* 解决方式: 建议将时间都格式化成'2020/04/16 00:00:00'的格式\n* 函数示例: formatDate(new Date(), 'YYYY/MM/dd hh:mm:ss')\n*/\nexport const formatDate = (date, fmt) => {\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\n  }\n  let o = {\n    'M+': date.getMonth() + 1,\n    'd+': date.getDate(),\n    'h+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds()\n  }\n  for (let k in o) {\n    if (new RegExp(`(${k})`).test(fmt)) {\n      let str = o[k] + ''\n      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? str : padLeftZero(str))\n    }\n  }\n  return fmt\n}\nconst padLeftZero = (str) => {\n  return ('00' + str).substr(str.length)\n}\nexport const judgeType = (s) => {\n\t// 函数返回数据的具体类型\n\treturn Object.prototype.toString.call(s).slice(8,-1);\n}\nexport const equalDate = (d1, d2) => {\n\tlet result = false;\n\tif (d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate()) {\n\t\tresult = true;\n\t}\n\treturn result;\n}\nexport const isAfterToday = (d1, d2) => {\n\tlet result = false;\n\tif(d1.getFullYear() === d2.getFullYear()){\n\t\tif(d1.getMonth() === d2.getMonth()){\n\t\t\tif(d1.getDate() < d2.getDate()){\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t}else if(d1.getMonth() < d2.getMonth()){\n\t\t\tresult = true;\n\t\t}\n\t}else if(d1.getFullYear() < d2.getFullYear()){\n\t\tresult = true;\n\t}\n\treturn result;\n}\n/* 比较时间,时间格式为2020-04-04\n*/\nexport const dateEqual = (before, after) => {\n\tbefore = new Date(before.replace('-', '/').replace('-', '/'))\n\tafter = new Date(after.replace('-', '/').replace('-', '/'))\n\tif (before.getTime() - after.getTime() === 0) {\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\nexport const gegerateDates = (date = new Date(), type='week') => {\n\tconst result = [];\n\tif (judgeType(date) === 'Date') {\n\t\t// 年，月，日\n\t\tconst y = date.getFullYear();\n\t\tconst m = date.getMonth();\n\t\tconst d = date.getDate();\n\t\tconst days = new Date(y, m+1, 0).getDate();\n\t\t// 获取日期是星期几\n\t\tlet weekIndex = date.getDay() === 0 ? 7 : date.getDay();\n\t\tif (type === 'month') {\n\t\t\tconst dobj = new Date(y,m,1);\n\t\t\tweekIndex = dobj.getDay() === 0 ? 7 : dobj.getDay();\n\t\t}\n\t\tif (type === 'week') {\n\t\t\tfor(let i = weekIndex - 1; i >0; i--) {\n\t\t\t\tconst dtemp = new Date(y,m,d);\n\t\t\t\tdtemp.setDate(dtemp.getDate() - i);\n\t\t\t\tresult.push({\n\t\t\t\t\ttime: dtemp,\n\t\t\t\t\tshow: true,\n\t\t\t\t\tindex: dtemp.getDay() === 0 ? 7 : dtemp.getDay(),\n\t\t\t\t\tfullDate: formatDate(dtemp, 'yyyy-MM-dd'),\n\t\t\t\t\tisToday: equalDate(new Date(), dtemp),\n\t\t\t\t\tafterToday: isAfterToday(new Date(), dtemp),\n\t\t\t\t})\n\t\t\t}\n\t\t\tfor(let i = 0; i <= 7 - weekIndex; i++) {\n\t\t\t\tconst dtemp = new Date(y,m,d);\n\t\t\t\tdtemp.setDate(dtemp.getDate() + i);\n\t\t\t\tresult.push({\n\t\t\t\t\ttime: dtemp,\n\t\t\t\t\tshow: true,\n\t\t\t\t\tindex: dtemp.getDay() === 0 ? 7 : dtemp.getDay(),\n\t\t\t\t\tfullDate: formatDate(dtemp, 'yyyy-MM-dd'),\n\t\t\t\t\tisToday: equalDate(new Date(), dtemp),\n\t\t\t\t\tafterToday: isAfterToday(new Date(), dtemp),\n\t\t\t\t})\n\t\t\t}\n\t\t} else if (type === 'month') {\n\t\t\t// 上个月\n\t\t\tfor(let i = weekIndex - 1; i > 0; i--) {\n\t\t\t\tconst dtemp = new Date(y,m,1);\n\t\t\t\tdtemp.setDate(dtemp.getDate() - i);\n\t\t\t\tresult.push({\n\t\t\t\t\ttime: dtemp,\n\t\t\t\t\tshow: false,\n\t\t\t\t\tindex: dtemp.getDate(),\n\t\t\t\t\tfullDate: formatDate(dtemp, 'yyyy-MM-dd'),\n\t\t\t\t\tisToday: equalDate(new Date(), dtemp),\n\t\t\t\t\tafterToday: isAfterToday(new Date(), dtemp),\n          choice: false\n\t\t\t\t});\n\t\t\t}\n\t\t\t// 这个月的日期\n\t\t\tfor (let i = 0; i < days; i++) {\n\t\t\t\tconst dtemp = new Date(y,m,1);\n\t\t\t\tdtemp.setDate(dtemp.getDate() + i);\n\t\t\t\tresult.push({\n\t\t\t\t\ttime: dtemp,\n\t\t\t\t\tshow: true,\n\t\t\t\t\tindex: dtemp.getDate(),\n\t\t\t\t\tfullDate: formatDate(dtemp, 'yyyy-MM-dd'),\n\t\t\t\t\tisToday: equalDate(new Date(), dtemp),\n\t\t\t\t\tafterToday: isAfterToday(new Date(), dtemp),\n          choice: false\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst len = 42 - result.length;\n\t\t\t// 下个月的日期\n\t\t\tfor (let i = 1; i <= len;i++) {\n\t\t\t\tconst dtemp = new Date(y,m+1,0);\n\t\t\t\tdtemp.setDate(dtemp.getDate() + i);\n\t\t\t\tresult.push({\n\t\t\t\t\ttime: dtemp,\n\t\t\t\t\tshow: false,\n\t\t\t\t\tindex: dtemp.getDate(),\n\t\t\t\t\tfullDate: formatDate(dtemp, 'yyyy-MM-dd'),\n\t\t\t\t\tisToday: equalDate(new Date(), dtemp),\n\t\t\t\t\tafterToday: isAfterToday(new Date(), dtemp),\n          choice: false\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\t\n}\n"],"names":["OBSTempAuthUpload","filePath","params","Promise","response","reject","uploadFile","res","data","uni","request","url","signedUrl","method","withCredentials","header","contentType","responseType","success","resp","statusCode","console","log","result","status","fail","error","readFile","fileManager","getFileSystemManager","tmpParams","bucketName","objectKey","getReq","then","JSON","parse","message","catch","err","OBSupload","type","host","paths","now","Date","dateStr","dateFormat","fileExt","substring","lastIndexOf","teacherId","store","state","xiaotiyunUser","teacher","getTime","bucket","resultUrl","module","exports","formatDate","date","fmt","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","judgeType","s","Object","prototype","toString","call","slice","equalDate","d1","d2","isAfterToday","dateEqual","before","after","gegerateDates","y","m","d","days","weekIndex","getDay","dobj","i","dtemp","setDate","push","time","show","index","fullDate","isToday","afterToday","choice","len"],"sourceRoot":""}